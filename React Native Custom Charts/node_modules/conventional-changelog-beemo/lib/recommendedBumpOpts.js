"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const parserOpts_1 = __importDefault(require("./parserOpts"));
const getTypeGroup_1 = __importDefault(require("./getTypeGroup"));
const options = {
    parserOpts: parserOpts_1.default,
    whatBump(commits) {
        let level = null;
        let breakings = 0;
        let features = 0;
        commits.forEach(commit => {
            let group;
            try {
                group = getTypeGroup_1.default(commit.type);
            }
            catch (_a) {
                return;
            }
            if (group.bump === 'major') {
                breakings += 1;
                level = 0;
            }
            else if (group.bump === 'minor') {
                features += 1;
                if (level === null || level === 2) {
                    level = 1;
                }
            }
            else if (group.bump === 'patch') {
                if (level === null) {
                    level = 2;
                }
            }
        });
        return {
            level,
            reason: `There are ${breakings} breaking changes and ${features} new features`,
        };
    },
};
exports.default = options;
