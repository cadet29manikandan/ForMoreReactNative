"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const execa_1 = __importDefault(require("execa"));
exports.execa = execa_1.default;
const fast_glob_1 = __importDefault(require("fast-glob"));
exports.glob = fast_glob_1.default;
function fromRoot(filePath, existsCheck = false) {
    const absPath = path_1.default.join(process.cwd(), filePath);
    if (existsCheck && !fs_1.default.existsSync(absPath)) {
        return '';
    }
    return absPath;
}
exports.fromRoot = fromRoot;
let pkgCache = null;
function getPackage() {
    var _a;
    const instance = (_a = process.beemo) === null || _a === void 0 ? void 0 : _a.tool;
    if (instance === null || instance === void 0 ? void 0 : instance.package) {
        return instance.package;
    }
    if (pkgCache) {
        return pkgCache;
    }
    // eslint-disable-next-line
    pkgCache = require(fromRoot('package.json'));
    return pkgCache;
}
exports.getPackage = getPackage;
function getSettings() {
    var _a, _b, _c;
    const instance = (_a = process.beemo) === null || _a === void 0 ? void 0 : _a.tool;
    const settings = {};
    const pkg = getPackage();
    if ((_b = instance === null || instance === void 0 ? void 0 : instance.config) === null || _b === void 0 ? void 0 : _b.settings) {
        Object.assign(settings, instance.config.settings);
    }
    else if ((_c = pkg.nimbus) === null || _c === void 0 ? void 0 : _c.settings) {
        Object.assign(settings, pkg.nimbus.settings);
    }
    return {
        buildFolder: 'lib',
        coverage: 75,
        docsFolder: 'docs',
        env: {},
        graphql: false,
        library: false,
        next: false,
        node: false,
        react: false,
        srcFolder: 'src',
        testFolder: 'test',
        typesFolder: 'types',
        ...settings,
    };
}
exports.getSettings = getSettings;
