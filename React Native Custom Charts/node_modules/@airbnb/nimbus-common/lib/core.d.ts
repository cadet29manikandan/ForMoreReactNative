import execa from 'execa';
import glob from 'fast-glob';
import { BeemoConfig } from '@beemo/core';
import { PackageConfig } from '@boost/core';
export interface NimbusEnvSetting {
    targets?: string | string[] | {
        browsers?: string | string[];
        esmodules?: boolean;
        node?: string | 'current' | true;
        safari?: string | 'tp';
        [key: string]: unknown;
    };
    spec?: boolean;
    loose?: boolean;
    modules?: 'amd' | 'umd' | 'systemjs' | 'commonjs' | 'cjs' | 'auto' | false;
    debug?: boolean;
    include?: (string | RegExp)[];
    exclude?: (string | RegExp)[];
    useBuiltIns?: 'usage' | 'entry' | false;
    forceAllTransforms?: boolean;
    configPath?: string;
    ignoreBrowserslistConfig?: boolean;
    shippedProposals?: boolean;
}
export interface NimbusSettings {
    buildFolder: string;
    coverage: number;
    docsFolder: string;
    env: NimbusEnvSetting;
    graphql: boolean;
    library: boolean;
    next: boolean;
    node: boolean;
    react: boolean;
    srcFolder: string;
    testFolder: string;
    typesFolder: string;
}
export interface NimbusPackage extends PackageConfig {
    nimbus: BeemoConfig<Partial<NimbusSettings>>;
}
export { execa, glob };
export declare function fromRoot(filePath: string, existsCheck?: boolean): string;
export declare function getPackage(): NimbusPackage;
export declare function getSettings(): NimbusSettings;
//# sourceMappingURL=core.d.ts.map