"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ConfigContext_1 = __importDefault(require("./ConfigContext"));
class DriverContext extends ConfigContext_1.default {
    constructor(args, driver, parallelArgv = []) {
        super(args);
        // Name defined on the plugin (kebab case)
        this.driverName = '';
        // Nested list of argv for each parallel execution
        this.parallelArgv = [];
        this.driverName = driver.name;
        this.parallelArgv = parallelArgv;
        this.primaryDriver = driver;
        // Add primary driver to driver list
        this.drivers.add(driver);
    }
    /**
     * Add a parallel command with additional argv.
     */
    addParallelCommand(argv) {
        this.parallelArgv.push(argv);
        return this;
    }
}
exports.default = DriverContext;
