/// <reference types="yargs" />
import ConfigContext from './ConfigContext';
import Driver from '../Driver';
import { Arguments, Argv, StdioType } from '../types';
export interface DriverArgs {
    concurrency: number;
    graph: boolean;
    stdio: StdioType;
    workspaces: string;
}
export default class DriverContext<T = DriverArgs> extends ConfigContext<T> {
    driverName: string;
    parallelArgv: Argv[];
    primaryDriver: Driver;
    constructor(args: Arguments<T>, driver: Driver, parallelArgv?: Argv[]);
    /**
     * Add a parallel command with additional argv.
     */
    addParallelCommand(argv: Argv): this;
}
//# sourceMappingURL=DriverContext.d.ts.map