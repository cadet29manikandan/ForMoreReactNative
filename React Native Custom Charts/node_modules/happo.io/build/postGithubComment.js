"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = postGithubComment;

var _requestPromiseNative = _interopRequireDefault(require("request-promise-native"));

var _Logger = _interopRequireDefault(require("./Logger"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const REPO_URL_MATCHER = /https?:\/\/[^/]+\/([^/]+)\/([^/]+)\/pull\/([0-9]+)/; // https://github.com/lightstep/lightstep/pull/6555

const {
  HAPPO_GITHUB_USER_CREDENTIALS
} = process.env;

async function postGithubComment({
  statusImageUrl,
  compareUrl,
  link,
  githubApiUrl,
  userCredentials = HAPPO_GITHUB_USER_CREDENTIALS
}) {
  const matches = link.match(REPO_URL_MATCHER);

  if (!matches) {
    new _Logger.default().info(`URL does not look like a github PR URL: ${link}. Skipping github comment posting...`);
    return false;
  }

  const [user, pass] = userCredentials.split(':');
  const owner = matches[1];
  const repo = matches[2];
  const prNumber = matches[3];
  const normalizedGithubApiUrl = githubApiUrl.replace(/\/$/, '');
  await (0, _requestPromiseNative.default)({
    url: `${normalizedGithubApiUrl}/repos/${owner}/${repo}/issues/${prNumber}/comments`,
    method: 'POST',
    json: true,
    headers: {
      'User-Agent': 'happo.io client'
    },
    auth: {
      user,
      pass
    },
    body: {
      body: `[![Happo status](${statusImageUrl})](${compareUrl})`
    }
  });
  return true;
}