"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// This is the default, render wrapper. If you're looking to provide your
// own, it might look something like this:
// ```
// /* In React */
// export default (component) => <Wrapper>{component}</Wrapper>
// ```
// ```
// /* In a plain-js project */
// export default (html) => '<div>' + html + '</div>';
//
// eslint-disable-line import/no-extraneous-dependencies
class ErrorBoundary extends _react.default.Component {
  constructor(props) {
    super(props);
    this.state = {};
  }

  static getDerivedStateFromError(error) {
    return {
      error
    };
  }

  componentDidCatch(error) {
    const {
      component,
      variant
    } = this.props;
    console.error(`Caught error while rendering component "${component}", variant "${variant}"`);
    console.error(error);
  }

  render() {
    const {
      error
    } = this.state;
    const {
      component,
      variant,
      children
    } = this.props;

    if (error) {
      return /*#__PURE__*/_react.default.createElement('pre', {
        style: {
          whiteSpace: 'pre-wrap',
          wordBreak: 'break-all',
          fontSize: 'small'
        }
      }, `Error when rendering component "${component}", variant "${variant}"\n\n${error.stack}`);
    }

    return children;
  }

}

var _default = (result, {
  component,
  variant
}) => /*#__PURE__*/_react.default.createElement(ErrorBoundary, {
  component,
  variant
}, result);

exports.default = _default;