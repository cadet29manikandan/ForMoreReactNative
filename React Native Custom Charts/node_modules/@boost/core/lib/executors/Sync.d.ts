import Context from '../Context';
import Executor, { AggregatedResponse, ExecuteHandler } from '../Executor';
import Task from '../Task';
export default class SyncExecutor<Ctx extends Context> extends Executor<Ctx> {
    parallel: boolean;
    /**
     * Execute tasks in parallel with a value being passed to each task.
     * Tasks will synchronize regardless of race conditions and errors.
     */
    run<T, R = any>(handler: ExecuteHandler<Ctx>, tasks: Task<Ctx>[], value?: T): Promise<AggregatedResponse<R>>;
}
//# sourceMappingURL=Sync.d.ts.map