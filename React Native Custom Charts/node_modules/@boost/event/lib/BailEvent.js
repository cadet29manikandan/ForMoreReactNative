"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const BaseEvent_1 = __importDefault(require("./BaseEvent"));
const constants_1 = require("./constants");
class BailEvent extends BaseEvent_1.default {
    /**
     * Synchronously execute listeners with the defined arguments.
     * If a listener returns `false`, the loop with be aborted early,
     * and the emitter will return `true` (for bailed).
     */
    emit(args, scope) {
        constants_1.debug('Emitting "%s%s" as bail', this.name, scope ? `:${scope}` : '');
        return Array.from(this.getListeners(scope)).some(listener => listener(...args) === false);
    }
}
exports.default = BailEvent;
