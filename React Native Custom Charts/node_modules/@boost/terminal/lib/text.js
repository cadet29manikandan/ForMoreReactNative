"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ansi_escapes_1 = __importDefault(require("ansi-escapes"));
const ansi_regex_1 = __importDefault(require("ansi-regex"));
const slice_ansi_1 = __importDefault(require("slice-ansi"));
const strip_ansi_1 = __importDefault(require("strip-ansi"));
const wrap_ansi_1 = __importDefault(require("wrap-ansi"));
const string_width_1 = __importDefault(require("string-width"));
const cli_truncate_1 = __importDefault(require("cli-truncate"));
const supports_hyperlinks_1 = __importDefault(require("supports-hyperlinks"));
exports.ANSI_REGEX = ansi_regex_1.default();
function annotate(text, annotation) {
    if (supports_hyperlinks_1.default().stdout) {
        return `\u001B]1337;AddAnnotation=${text.length}|${annotation}\u0007${text}`;
    }
    return text;
}
exports.annotate = annotate;
function calculateWidth(text) {
    return string_width_1.default(text);
}
exports.calculateWidth = calculateWidth;
function hasAnsi(value) {
    return exports.ANSI_REGEX.test(value);
}
exports.hasAnsi = hasAnsi;
function link(text, url) {
    if (supports_hyperlinks_1.default().stdout) {
        return ansi_escapes_1.default.link(text, url);
    }
    return text;
}
exports.link = link;
function sliceAnsi(text, start, end) {
    return slice_ansi_1.default(text, start, end);
}
exports.sliceAnsi = sliceAnsi;
function stripAnsi(text) {
    return strip_ansi_1.default(text);
}
exports.stripAnsi = stripAnsi;
function truncate(text, width, options) {
    return cli_truncate_1.default(text, width, options);
}
exports.truncate = truncate;
function wrapAnsi(text, width, options) {
    return wrap_ansi_1.default(text, width, options);
}
exports.wrapAnsi = wrapAnsi;
